<?php

namespace App\Models;

/**
 * Client.
 *
 * @autogenerated by Phalcon Developer Tools
 * @date 2024-12-09, 20:18:29
 */
class Client extends Base
{
	/**
	 * @var int
	 * @Primary
	 * @Identity
	 * @Column(column="id", type="integer", nullable=false)
	 */
	protected $id;

	/**
	 * @var string
	 * @Column(column="username", type="string", length=255, nullable=false)
	 */
	protected $username;

	/**
	 * @var string
	 * @Column(column="password", type="string", length=255, nullable=false)
	 */
	protected $password;

	/**
	 * @var string
	 * @Column(column="role", type="string", length='owner','maintainer','user', nullable=false)
	 */
	protected $role;

	/**
	 * @var string
	 * @Column(column="created_at", type="string", nullable=false)
	 */
	protected $createdAt;

	/**
	 * @var string
	 * @Column(column="updated_at", type="string", nullable=false)
	 */
	protected $updatedAt;

	/**
	 * @var string
	 * @Column(column="deleted_at", type="string", nullable=true)
	 */
	protected $deletedAt;

	/**
	 * Method to set the value of field id.
	 *
	 * @param  int   $id
	 * @return $this
	 */
	public function setId($id)
	{
		$this->id = $id;

		return $this;
	}

	/**
	 * Method to set the value of field username.
	 *
	 * @param  string $username
	 * @return $this
	 */
	public function setUsername($username)
	{
		$this->username = $username;

		return $this;
	}

	/**
	 * Method to set the value of field password.
	 *
	 * @param  string $password
	 * @return $this
	 */
	public function setPassword($password)
	{
		$this->password = $password;

		return $this;
	}

	/**
	 * Method to set the value of field role.
	 *
	 * @param  string $role
	 * @return $this
	 */
	public function setRole($role)
	{
		$this->role = $role;

		return $this;
	}

	/**
	 * Method to set the value of field created_at.
	 *
	 * @param  string $createdAt
	 * @return $this
	 */
	public function setCreatedAt($createdAt)
	{
		$this->createdAt = $createdAt;

		return $this;
	}

	/**
	 * Method to set the value of field updated_at.
	 *
	 * @param  string $updatedAt
	 * @return $this
	 */
	public function setUpdatedAt($updatedAt)
	{
		$this->updatedAt = $updatedAt;

		return $this;
	}

	/**
	 * Method to set the value of field deleted_at.
	 *
	 * @param  string $deletedAt
	 * @return $this
	 */
	public function setDeletedAt($deletedAt)
	{
		$this->deletedAt = $deletedAt;

		return $this;
	}

	/**
	 * Returns the value of field id.
	 *
	 * @return int
	 */
	public function getId()
	{
		return $this->id;
	}

	/**
	 * Returns the value of field username.
	 *
	 * @return string
	 */
	public function getUsername()
	{
		return $this->username;
	}

	/**
	 * Returns the value of field password.
	 *
	 * @return string
	 */
	public function getPassword()
	{
		return $this->password;
	}

	/**
	 * Returns the value of field role.
	 *
	 * @return string
	 */
	public function getRole()
	{
		return $this->role;
	}

	/**
	 * Returns the value of field createdAt.
	 *
	 * @return string
	 */
	public function getCreatedAt()
	{
		return $this->createdAt;
	}

	/**
	 * Returns the value of field updatedAt.
	 *
	 * @return string
	 */
	public function getUpdatedAt()
	{
		return $this->updatedAt;
	}

	/**
	 * Returns the value of field deletedAt.
	 *
	 * @return string
	 */
	public function getDeletedAt()
	{
		return $this->deletedAt;
	}

	/**
	 * Initialize method for model.
	 */
	public function initialize()
	{
		$this->setSchema('test');
		$this->setSource('client');
	}

	/**
	 * Independent Column Mapping.
	 * Keys are the real names in the table and the values their names in the application.
	 *
	 * @return array
	 */
	public function columnMap()
	{
		return [
			'id' => 'id',
			'username' => 'username',
			'password' => 'password',
			'role' => 'role',
			'created_at' => 'createdAt',
			'updated_at' => 'updatedAt',
			'deleted_at' => 'deletedAt',
		];
	}
}
